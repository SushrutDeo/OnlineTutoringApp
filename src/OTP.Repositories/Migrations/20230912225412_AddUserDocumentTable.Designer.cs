// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OTP.Repositories;

#nullable disable

namespace OTP.Repositories.Migrations
{
    [DbContext(typeof(OTPDbContext))]
    [Migration("20230912225412_AddUserDocumentTable")]
    partial class AddUserDocumentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OTP.Domains.Models.CodedLists.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DocumentType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3464),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3466),
                            Name = "Proof Of Address"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3467),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3468),
                            Name = "Proof Of Id"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3469),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3469),
                            Name = "Proof Of DBS"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3470),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3470),
                            Name = "Proof Of Eligibility To Work"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.CodedLists.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevel", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3730),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3730),
                            Name = "Primary"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3731),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3732),
                            Name = "Secondary"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3733),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3733),
                            Name = "GCSE"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3734),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3734),
                            Name = "A Level"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3735),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3735),
                            Name = "University"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3736),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3736),
                            Name = "Masters"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.CodedLists.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Gender", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3863),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3863),
                            Name = "Female"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3864),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3865),
                            Name = "Male"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.CodedLists.TeachingPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TeachingPreference", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4108),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4108),
                            Name = "Online"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4109),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4110),
                            Name = "Student's Home"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4111),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4111),
                            Name = "Tutor's Home"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.CodedLists.TimeRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TimeRange", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4217),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4218),
                            Name = "Before 12"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4219),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4219),
                            Name = "12 - 5 pm"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4220),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4220),
                            Name = "After 5 pm"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.CodedLists.WeekDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("WeekDay", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4326),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4327),
                            Name = "Sunday"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4328),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4328),
                            Name = "Monday"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4329),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4330),
                            Name = "Tuesday"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4330),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4331),
                            Name = "Wednesday"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4331),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4332),
                            Name = "Thursday"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4333),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4333),
                            Name = "Friday"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4334),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(4334),
                            Name = "Saturday"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.Common.UserDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserDocument", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.Common.UserImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserImage", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.StudentSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubject", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.TutorEducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.HasIndex("TutorId");

                    b.ToTable("TutorEducationLevel");
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.TutorSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TutorId");

                    b.ToTable("TutorSubject", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.TutorTeachingPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeachingPreferenceId")
                        .HasColumnType("int");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeachingPreferenceId");

                    b.HasIndex("TutorId");

                    b.ToTable("TutorTeachingPreference", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.Students.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("County")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LinkedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.HasIndex("GenderId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.Subjects.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Subject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3984),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3985),
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3986),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3986),
                            Name = "Maths"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3987),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3988),
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3988),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3989),
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3990),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 9, 12, 22, 54, 11, 908, DateTimeKind.Utc).AddTicks(3990),
                            Name = "Biology"
                        });
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("County")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnhancedDBSChecked")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LinkedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RightToWorkVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.TutorAvailibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeRangeId")
                        .HasColumnType("int");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.Property<int>("WeekDayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeRangeId");

                    b.HasIndex("TutorId");

                    b.HasIndex("WeekDayId");

                    b.ToTable("TutorAvailibility", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.TutorDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("TutorDocument", (string)null);
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.StudentSubject", b =>
                {
                    b.HasOne("OTP.Domains.Models.Students.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.Subjects.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.TutorEducationLevel", b =>
                {
                    b.HasOne("OTP.Domains.Models.CodedLists.EducationLevel", null)
                        .WithMany()
                        .HasForeignKey("EducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.Tutors.Tutor", null)
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.TutorSubject", b =>
                {
                    b.HasOne("OTP.Domains.Models.Subjects.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.Tutors.Tutor", null)
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OTP.Domains.Models.ManyToMany.TutorTeachingPreference", b =>
                {
                    b.HasOne("OTP.Domains.Models.CodedLists.TeachingPreference", null)
                        .WithMany()
                        .HasForeignKey("TeachingPreferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.Tutors.Tutor", null)
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OTP.Domains.Models.Students.Student", b =>
                {
                    b.HasOne("OTP.Domains.Models.CodedLists.EducationLevel", "EducationLevel")
                        .WithMany()
                        .HasForeignKey("EducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.CodedLists.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.Navigation("EducationLevel");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.Tutor", b =>
                {
                    b.HasOne("OTP.Domains.Models.CodedLists.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.TutorAvailibility", b =>
                {
                    b.HasOne("OTP.Domains.Models.CodedLists.TimeRange", "TimeRange")
                        .WithMany()
                        .HasForeignKey("TimeRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.Tutors.Tutor", "Tutor")
                        .WithMany("TutorAvailibilities")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OTP.Domains.Models.CodedLists.WeekDay", "WeekDay")
                        .WithMany()
                        .HasForeignKey("WeekDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeRange");

                    b.Navigation("Tutor");

                    b.Navigation("WeekDay");
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.TutorDocument", b =>
                {
                    b.HasOne("OTP.Domains.Models.Tutors.Tutor", "Tutor")
                        .WithMany("TutorDocuments")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("OTP.Domains.Models.Tutors.Tutor", b =>
                {
                    b.Navigation("TutorAvailibilities");

                    b.Navigation("TutorDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
